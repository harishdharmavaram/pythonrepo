pool:
  vmImage: ubuntu-latest

variables:
  - name: PythonVersion
    value: '3.9'

stages:
  - stage: Stage_SnowflakeTest
    jobs:
    - job: Snowflake_ConnectionTest
      steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(PythonVersion)'
          displayName: 'Use Python $(PythonVersion)'
      - script: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
        displayName: 'Install dependencies'
      - task: replacetokens@5
        inputs:
          targetFiles: 'secret.json'
          encoding: 'auto'
          tokenPattern: 'default'
          writeBOM: true
          actionOnMissing: 'warn'
          keepToken: false
          actionOnNoFiles: 'continue'
          enableTransforms: false
          enableRecursion: false
          useLegacyPattern: false
          enableTelemetry: true

      - script: pytest test_snowflake_connector.py 
        displayName: "pytest_connection"
    
    - job: Snowflake_TransformTest
      dependsOn: Snowflake_ConnectionTest
      steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(PythonVersion)'
          displayName: 'Use Python $(PythonVersion)'
      - script: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
        displayName: 'Install dependencies'
      - task: replacetokens@5
        inputs:
          targetFiles: 'secret.json'
          encoding: 'auto'
          tokenPattern: 'default'
          writeBOM: true
          actionOnMissing: 'warn'
          keepToken: false
          actionOnNoFiles: 'continue'
          enableTransforms: false
          enableRecursion: false
          useLegacyPattern: false
          enableTelemetry: true
      - script: pytest test_snowpark_transform.py 
        displayName: "pytest_transform"

  - stage: Stage_SnowflakeArtifact
    dependsOn: Stage_SnowflakeTest
    jobs:
    - job: Snowflake_Artifact
      steps:
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(System.DefaultWorkingDirectory)'
          artifact: 'drop'
          publishLocation: 'pipeline'         
